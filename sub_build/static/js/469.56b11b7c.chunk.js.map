{"version":3,"file":"static/js/469.56b11b7c.chunk.js","mappings":"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","sources":["pages/Auth/Register.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport InputField from \"../../components/FormFields/InputField/InputField\";\nimport { useForm } from \"react-hook-form\";\nimport { MdDriveFileRenameOutline, MdPassword } from \"react-icons/md\";\nimport Button from \"../../components/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"../../redux/services/auth\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Checkbox from \"../../components/FormFields/Checkbox/Checkbox\";\nimport { FaRegEye } from \"react-icons/fa\";\nimport { registerTeamMember } from \"../../redux/services/team\";\nconst Register = () => {\n  const {\n    handleSubmit,\n    watch,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm({});\n  const params = new URLSearchParams(useLocation().search);\n  const authType = params.get(\"authType\");\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [isTeanRegistered, setIsTeanRegistered] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigateTo = useNavigate();\n  const { isAuthenticated, isLoading } = useSelector((state) => state.auth);\n  const handleFormSubmit = async (data) => {\n    let formData = {\n      firstname: data.firstname,\n      lastname: data.lastname,\n      email: data.email,\n      password: data.password,\n      username: data.username,\n    };\n    if (authType === \"team\") {\n      formData.reference = params.get(\"reference\");\n      formData.invitation_ref = params.get(\"invitation_ref\");\n      formData.confirmPassword = data.confirmPassword;\n      const registered = await dispatch(registerTeamMember(formData));\n      if (registered?.data?.userData) {\n        alert(\"User registration\");\n        setIsTeanRegistered(true);\n      }\n      return;\n    }\n    if (data.password === data.confirmPassword) {\n      const is_registered = await dispatch(registerUser(formData));\n      if (is_registered?.data?.userData) {\n        setIsRegistered(true);\n      }\n    } else {\n      toast.error(\"Confirm password is invalid!\");\n    }\n  };\n\n  useEffect(() => {\n    if (isRegistered) {\n      navigateTo(\"/otp\");\n    }\n  }, [isRegistered, navigateTo]);\n  useEffect(() => {\n    if (isTeanRegistered) {\n      navigateTo(\"/lawfirm\");\n    }\n  }, [isTeanRegistered, navigateTo]);\n  useEffect(() => {\n    if (params.get(\"firstname\")) {\n      setValue(\"firstname\", params.get(\"firstname\"));\n    }\n    if (params.get(\"lastname\")) {\n      setValue(\"lastname\", params.get(\"lastname\"));\n    }\n    if (params.get(\"email\")) {\n      setValue(\"email\", params.get(\"email\"));\n      setValue(\"username\", params.get(\"email\").split(\"@\")[0]);\n    }\n    if (params.get(\"role\")) {\n      setValue(\"role\", params.get(\"role\"));\n    }\n  }, [setValue]);\n  return (\n    // <Layout\n    //   component={\n    <section className=\" bg-gray-100 h-screen flex justify-center items-center\">\n      {/* <div className=\"  py-8 px-4 mx-auto max-w-screen-xl lg:py-16 grid lg:grid-cols-2 gap-8 lg:gap-16 m-auto\"> */}\n      {/* <div className=\"flex flex-col justify-center text-center\">\n          <h1 className=\"  mb-4 text-4xl font-extrabold tracking-tight leading-none  md:text-5xl lg:text-6xl dark:text-white  text-gray-800\">\n            Join Us Today!\n          </h1>\n          <p className=\"mb-6 text-lg font-normal text-gray-700 lg:text-xl dark:text-gray-400\">\n            Create your account to unlock powerful tools and features. Sign up\n            now to start your journey with us!\n          </p>\n        </div> */}\n      <div>\n        <div className=\"w-full lg:max-w-xl p-6 space-y-8 sm:p-8 bg-white shadow-xl dark:bg-gray-800\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white text-center\">\n            Create Your Account\n          </h2>\n          <form\n            className=\"mt-8 space-y-6\"\n            onSubmit={handleSubmit(handleFormSubmit)}\n          >\n            <div className=\"grid grid-cols-2 gap-5\">\n              <div>\n                <InputField\n                  name=\"firstname\"\n                  control={control}\n                  svg={<MdDriveFileRenameOutline />}\n                  errors={errors}\n                  label=\"First Name\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message: \"Field required!\",\n                    },\n                  }}\n                />{\" \"}\n              </div>\n              <div>\n                <InputField\n                  name=\"lastname\"\n                  control={control}\n                  svg={<MdDriveFileRenameOutline />}\n                  errors={errors}\n                  label=\"Last Name\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message: \"Field required!\",\n                    },\n                  }}\n                />{\" \"}\n              </div>\n            </div>\n            <div>\n              <InputField\n                name=\"username\"\n                control={control}\n                svg={<MdDriveFileRenameOutline />}\n                errors={errors}\n                label=\"Username\"\n                rules={{\n                  required: {\n                    value: true,\n                    message: \"Field required!\",\n                  },\n                  pattern: {\n                    value: /^[A-Za-z\\s]+$/, // Only alphabets and spaces allowed\n                    message: \"Only alphabets are allowed!\",\n                  },\n                  min: 3,\n                }}\n              />{\" \"}\n            </div>\n            <div>\n              <InputField\n                name=\"email\"\n                type=\"email\"\n                control={control}\n                svg={<MdDriveFileRenameOutline />}\n                errors={errors}\n                label=\"Email Address\"\n                rules={{\n                  required: {\n                    value: true,\n                    message: \"Field required!\",\n                  },\n                }}\n              />{\" \"}\n            </div>\n            <div>\n              <InputField\n                name=\"password\"\n                type=\"password\"\n                control={control}\n                svg={<FaRegEye />}\n                errors={errors}\n                label=\"Password\"\n                rules={{\n                  required: {\n                    value: true,\n                    message: \"Field required!\",\n                  },\n                }}\n              />\n            </div>\n            <div>\n              <InputField\n                name=\"confirmPassword\"\n                type=\"password\"\n                control={control}\n                svg={<FaRegEye />}\n                errors={errors}\n                label=\"Confirm Password\"\n                rules={{\n                  required: {\n                    value: true,\n                    message: \"Field required!\",\n                  },\n                }}\n              />\n            </div>\n            <div className=\"flex\">\n              <Checkbox\n                name=\"agree\"\n                control={control}\n                errors={errors}\n                // label=\"By signing up, you agree to our Privacy Policy,Cookie Policy and Terms of Use\"\n                rules={{\n                  required: {\n                    value: true,\n                    message: \"Field required!\",\n                  },\n                }}\n              />\n              <div>\n                By signing up, you agree to our{\" \"}\n                <Link className=\"text-blue-500\" to={\"/privacy-policy\"}>\n                  Privacy Policy\n                </Link>\n                , Cookie Policy and{\" \"}\n                <Link\n                  className=\"text-blue-500\"\n                  to={\"https://senderside.com/terms\"}\n                >\n                  Terms of Use\n                </Link>\n              </div>\n            </div>\n            <Button type=\"submit\" loading={isLoading} className=\"py-3\">\n              Sign Up\n            </Button>\n            <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n              Already have an account &nbsp;\n              <Link\n                to=\"/sign-in\"\n                className=\"text-blue-600 hover:underline dark:text-blue-500\"\n              >\n                Login\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n      {/* </div> */}\n    </section>\n    //   }\n    // ></Layout>\n  );\n};\n\nexport default Register;\n"],"names":["Register","handleSubmit","watch","control","setValue","formState","errors","useForm","params","URLSearchParams","useLocation","search","authType","get","isRegistered","setIsRegistered","useState","isTeanRegistered","setIsTeanRegistered","dispatch","useDispatch","navigateTo","useNavigate","isAuthenticated","isLoading","useSelector","state","auth","useEffect","split","_jsx","className","children","_jsxs","onSubmit","async","formData","firstname","data","lastname","email","password","username","confirmPassword","_is_registered$data","is_registered","registerUser","userData","toast","error","_registered$data","reference","invitation_ref","registered","registerTeamMember","alert","InputField","name","svg","MdDriveFileRenameOutline","label","rules","required","value","message","pattern","min","type","FaRegEye","Checkbox","Link","to","Button","loading"],"sourceRoot":""}